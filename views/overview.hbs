<div class="container-fluid p-0">
    <div class="d-flex">
            <!-- Dashboard Content -->
            <div class="dashboard-content">
                <div class="row">
                    <!-- Statistics Card -->
                    <div class="col-lg-8">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5>Statistics</h5>
                            </div>
                            <div class="card-body">
                                <h2 class="balance">$45,090.09</h2>
                                
                                <div class="time-filter">
                                    <button class="time-btn">1H</button>
                                    <button class="time-btn active">24H</button>
                                    <button class="time-btn">1W</button>
                                    <button class="time-btn">1M</button>
                                    <button class="time-btn">3M</button>
                                    <button class="time-btn">6M</button>
                                </div>
                                
                                <div class="coin-selector">
                                    <div class="selected-coin">
                                        <div class="coin-icon bitcoin">
                                            <i class="fab fa-bitcoin"></i>
                                        </div>
                                        <span>Bitcoin (BTC)</span>
                                        <i class="fas fa-chevron-down"></i>
                                    </div>
                                </div>
                                
                                <div class="chart-container">
                                    <canvas id="cryptoChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Watchlist Card -->
                    <div class="col-lg-4">
                        <div class="card mb-4">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5>Watchlist</h5>
                                <div class="dropdown">
                                    <span>Today</span>
                                    <i class="fas fa-chevron-down"></i>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="watchlist-item">
                                    <div class="coin-info">
                                        <div class="coin-icon bitcoin">
                                            <i class="fab fa-bitcoin"></i>
                                        </div>
                                        <div class="coin-detail">
                                            <span class="coin-name">BTC</span>
                                            <span class="coin-change negative">-1.09%</span>
                                        </div>
                                    </div>
                                    <div class="price-info">
                                        <div class="price-detail">
                                            <span class="price-value">$40,090</span>
                                            <span class="price-amount">0.07447 BTC</span>
                                        </div>
                                        <div class="mini-chart">
                                            <canvas class="mini-chart-canvas" data-type="btc"></canvas>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="watchlist-item">
                                    <div class="coin-info">
                                        <div class="coin-icon ripple">
                                            <i class="fas fa-water"></i>
                                        </div>
                                        <div class="coin-detail">
                                            <span class="coin-name">XRP</span>
                                            <span class="coin-change negative">-1.09%</span>
                                        </div>
                                    </div>
                                    <div class="price-info">
                                        <div class="price-detail">
                                            <span class="price-value">$40,090</span>
                                            <span class="price-amount">0.07447 XRP</span>
                                        </div>
                                        <div class="mini-chart">
                                            <canvas class="mini-chart-canvas" data-type="xrp"></canvas>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="watchlist-item">
                                    <div class="coin-info">
                                        <div class="coin-icon dogecoin">
                                            <i class="fas fa-dog"></i>
                                        </div>
                                        <div class="coin-detail">
                                            <span class="coin-name">DGE</span>
                                            <span class="coin-change negative">-1.09%</span>
                                        </div>
                                    </div>
                                    <div class="price-info">
                                        <div class="price-detail">
                                            <span class="price-value">$40,090</span>
                                            <span class="price-amount">0.07447 DGE</span>
                                        </div>
                                        <div class="mini-chart">
                                            <canvas class="mini-chart-canvas" data-type="dge"></canvas>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="watchlist-item">
                                    <div class="coin-info">
                                        <div class="coin-icon icon">
                                            <i class="fas fa-dot-circle"></i>
                                        </div>
                                        <div class="coin-detail">
                                            <span class="coin-name">ICX</span>
                                            <span class="coin-change negative">-1.09%</span>
                                        </div>
                                    </div>
                                    <div class="price-info">
                                        <div class="price-detail">
                                            <span class="price-value">$40,090</span>
                                            <span class="price-amount">0.07447 ICX</span>
                                        </div>
                                        <div class="mini-chart">
                                            <canvas class="mini-chart-canvas" data-type="icx"></canvas>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="watchlist-item">
                                    <div class="coin-info">
                                        <div class="coin-icon binance">
                                            <i class="fas fa-coins"></i>
                                        </div>
                                        <div class="coin-detail">
                                            <span class="coin-name">BNC</span>
                                            <span class="coin-change negative">-1.09%</span>
                                        </div>
                                    </div>
                                    <div class="price-info">
                                        <div class="price-detail">
                                            <span class="price-value">$40,090</span>
                                            <span class="price-amount">0.07447 BNC</span>
                                        </div>
                                        <div class="mini-chart">
                                            <canvas class="mini-chart-canvas" data-type="bnc"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <!-- Market Info Card -->
                    <div class="col-lg-8">
                        <div class="card mb-4">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5>Market Info</h5>
                                <div class="dropdown">
                                    <span>Today</span>
                                    <i class="fas fa-chevron-down"></i>
                                </div>
                            </div>
                            <div class="card-body">
                                <table class="market-table">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Last Price</th>
                                            <th>Change(24h)</th>
                                            <th>Chart</th>
                                            <th>Market Cap</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>
                                                <div class="coin-cell">
                                                    <div class="coin-icon bitcoin">
                                                        <i class="fab fa-bitcoin"></i>
                                                    </div>
                                                    <span>Bitcoin</span>
                                                </div>
                                            </td>
                                            <td>$12,000</td>
                                            <td class="positive">+1.24%</td>
                                            <td>
                                                <div class="mini-chart-table">
                                                    <canvas class="table-chart-canvas" data-type="btc-positive"></canvas>
                                                </div>
                                            </td>
                                            <td>$120,000</td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div class="coin-cell">
                                                    <div class="coin-icon icon">
                                                        <i class="fas fa-dot-circle"></i>
                                                    </div>
                                                    <span>Icon</span>
                                                </div>
                                            </td>
                                            <td>$12,000</td>
                                            <td class="negative">-0.24%</td>
                                            <td>
                                                <div class="mini-chart-table">
                                                    <canvas class="table-chart-canvas" data-type="icx-negative"></canvas>
                                                </div>
                                            </td>
                                            <td>$120,000</td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div class="coin-cell">
                                                    <div class="coin-icon bytecoin">
                                                        <i class="fas fa-coins"></i>
                                                    </div>
                                                    <span>Bytecoin</span>
                                                </div>
                                            </td>
                                            <td>$12,000</td>
                                            <td class="positive">+1.24%</td>
                                            <td>
                                                <div class="mini-chart-table">
                                                    <canvas class="table-chart-canvas" data-type="bcn-positive"></canvas>
                                                </div>
                                            </td>
                                            <td>$120,000</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Latest News Card -->
                    <div class="col-lg-4">
                        <div class="card mb-4">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5>Latest news</h5>
                                <a href="#" class="see-more">See more</a>
                            </div>
                            <div class="card-body">
                                <div class="news-item">
                                    <div class="news-img">
                                        <img src="/api/placeholder/100/70" alt="Crypto news">
                                    </div>
                                    <div class="news-content">
                                        <h6>Crypto Panic Ease</h6>
                                        <p>Lorem ipsum dolor sit amet, conr adipi. Accumsan, enim quis netus...</p>
                                    </div>
                                </div>
                                
                                <div class="news-item">
                                    <div class="news-img">
                                        <img src="/api/placeholder/100/70" alt="Crypto news">
                                    </div>
                                    <div class="news-content">
                                        <h6>Crypto Panic Ease</h6>
                                        <p>Lorem ipsum dolor sit amet, conr adipi. Accumsan, enim quis netus...</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
<script>
    // Initialize main chart
    document.addEventListener('DOMContentLoaded', function() {
        initMainChart();
        initMiniCharts();
        initTableCharts();
        setupEventListeners();
    });

    function initMainChart() {
        const ctx = document.getElementById('cryptoChart').getContext('2d');
        
        // Generate some random data for the chart
        const labels = generateTimeLabels(24);
        const data = generateChartData(24, 40000, 42000, true);
        
        const mainChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Bitcoin Price (USD)',
                    data: data,
                    backgroundColor: 'rgba(25, 118, 210, 0.1)',
                    borderColor: '#1976d2',
                    borderWidth: 2,
                    pointRadius: 0,
                    pointHoverRadius: 4,
                    pointHoverBackgroundColor: '#1976d2',
                    pointHoverBorderColor: '#fff',
                    tension: 0.4,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        mode: 'index',
                        intersect: false,
                        backgroundColor: '#212529',
                        titleColor: '#e0e0e0',
                        bodyColor: '#e0e0e0',
                        borderColor: '#333333',
                        borderWidth: 1,
                        padding: 10,
                        displayColors: false,
                        callbacks: {
                            label: function(context) {
                                return `$${context.parsed.y.toLocaleString()}`;
                            }
                        }
                    }
                },
                interaction: {
                    mode: 'nearest',
                    axis: 'x',
                    intersect: false
                },
                scales: {
                    x: {
                        display: true,
                        grid: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            color: '#a0a0a0',
                            maxRotation: 0,
                            autoSkip: true,
                            maxTicksLimit: 6
                        }
                    },
                    y: {
                        display: true,
                        position: 'right',
                        grid: {
                            color: 'rgba(160, 160, 160, 0.1)',
                            drawBorder: false
                        },
                        ticks: {
                            color: '#a0a0a0',
                            callback: function(value) {
                                return '$' + value.toLocaleString();
                            }
                        }
                    }
                }
            }
        });
    }

    function initMiniCharts() {
        // Initialize mini charts in watchlist
        const miniChartCanvases = document.querySelectorAll('.mini-chart-canvas');
        
        miniChartCanvases.forEach(canvas => {
            const type = canvas.getAttribute('data-type');
            const isPositive = !type.includes('negative');
            const color = getCoinColor(type.split('-')[0]);
            
            const ctx = canvas.getContext('2d');
            const data = generateChartData(10, 100, 200, isPositive);
            
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: Array(10).fill(''),
                    datasets: [{
                        data: data,
                        borderColor: color,
                        backgroundColor: 'transparent',
                        borderWidth: 1.5,
                        pointRadius: 0,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            enabled: false
                        }
                    },
                    scales: {
                        x: {
                            display: false
                        },
                        y: {
                            display: false
                        }
                    },
                    elements: {
                        line: {
                            tension: 0.4
                        }
                    }
                }
            });
        });
    }

    function initTableCharts() {
        // Initialize mini charts in table
        const tableChartCanvases = document.querySelectorAll('.table-chart-canvas');
        
        tableChartCanvases.forEach(canvas => {
            const type = canvas.getAttribute('data-type');
            const isPositive = type.includes('positive');
            const coinType = type.split('-')[0];
            const color = isPositive ? '#4caf50' : '#ff5252';
            
            const ctx = canvas.getContext('2d');
            const data = generateChartData(10, 100, 200, isPositive);
            
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: Array(10).fill(''),
                    datasets: [{
                        data: data,
                        borderColor: color,
                        backgroundColor: 'transparent',
                        borderWidth: 1.5,
                        pointRadius: 0,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            enabled: false
                        }
                    },
                    scales: {
                        x: {
                            display: false
                        },
                        y: {
                            display: false
                        }
                    },
                    elements: {
                        line: {
                            tension: 0.4
                        }
                    }
                }
            });
        });
    }

    // Helper Functions
    function generateTimeLabels(count) {
        const labels = [];
        const now = new Date();
        
        for (let i = count - 1; i >= 0; i--) {
            const time = new Date(now);
            time.setHours(time.getHours() - i);
            labels.push(time.getHours() + ':00');
        }
        
        return labels;
    }

    function generateChartData(count, min, max, uptrend = true) {
        const data = [];
        let value = min + Math.random() * (max - min) / 2;
        
        for (let i = 0; i < count; i++) {
            const change = (Math.random() - (uptrend ? 0.4 : 0.6)) * (max - min) / 20;
            value += change;
            value = Math.max(min, Math.min(max, value));
            data.push(value);
        }
        
        return data;
    }

    function getCoinColor(coinType) {
        const colors = {
            'btc': '#f7931a',
            'xrp': '#0f72e5',
            'dge': '#ba9f33',
            'icx': '#31b5ab',
            'bnc': '#f3ba2f',
            'bcn': '#f04086'
        };
        
        return colors[coinType] || '#1976d2';
    }

    function setupEventListeners() {
        // Time filter buttons
        const timeButtons = document.querySelectorAll('.time-btn');
        timeButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Remove active class from all buttons
                timeButtons.forEach(btn => btn.classList.remove('active'));
                
                // Add active class to clicked button
                this.classList.add('active');
                
                // Update chart based on selected time range
                updateChartTimeRange(this.textContent);
            });
        });
        
        // Coin selector
        const coinSelector = document.querySelector('.selected-coin');
        if (coinSelector) {
            coinSelector.addEventListener('click', function() {
                // This would normally open a dropdown menu
                console.log('Coin selector clicked');
                // For demo purposes, we'll just cycle through a few coins
                const coinNames = ['Bitcoin (BTC)', 'Ethereum (ETH)', 'Ripple (XRP)', 'Dogecoin (DOGE)'];
                const coinIcons = ['bitcoin', 'ethereum', 'ripple', 'dogecoin'];
                
                const currentCoin = this.querySelector('span').textContent;
                const currentIndex = coinNames.indexOf(currentCoin);
                const nextIndex = (currentIndex + 1) % coinNames.length;
                
                // Update coin icon and name
                this.querySelector('.coin-icon').className = `coin-icon ${coinIcons[nextIndex]}`;
                this.querySelector('span').textContent = coinNames[nextIndex];
                
                // Update main chart
                updateChartForCoin(coinNames[nextIndex]);
            });
        }
        
        // Notification click
        const notification = document.querySelector('.notification');
        if (notification) {
            notification.addEventListener('click', function() {
                alert('You have 3 new notifications');
            });
        }
        
        // Profile click
        const profile = document.querySelector('.profile');
        if (profile) {
            profile.addEventListener('click', function() {
                console.log('Profile clicked');
                // This would normally open a profile menu
            });
        }
        
        // Watchlist items hover effect
        const watchlistItems = document.querySelectorAll('.watchlist-item');
        watchlistItems.forEach(item => {
            item.addEventListener('click', function() {
                const coinName = this.querySelector('.coin-name').textContent;
                // Update main chart with selected coin
                console.log(`Selected ${coinName} from watchlist`);
                
                // Highlight selected item
                watchlistItems.forEach(itm => itm.classList.remove('selected'));
                this.classList.add('selected');
            });
        });
    }

    function updateChartTimeRange(timeRange) {
        // This function would update the main chart based on selected time range
        console.log(`Updating chart for time range: ${timeRange}`);
        
        // For demo, we'll generate new random data with different point counts
        let count;
        switch(timeRange) {
            case '1H':
                count = 60; // 60 minutes
                break;
            case '24H':
                count = 24; // 24 hours
                break;
            case '1W':
                count = 7; // 7 days
                break;
            case '1M':
                count = 30; // 30 days
                break;
            case '3M':
                count = 90; // 90 days
                break;
            case '6M':
                count = 180; // 180 days
                break;
            default:
                count = 24;
        }
        
        // Get the chart instance
        const chartInstance = Chart.getChart('cryptoChart');
        if (chartInstance) {
            // Generate new data
            const labels = generateTimeLabels(count);
            const data = generateChartData(count, 38000, 45000, true);
            
            // Update chart data
            chartInstance.data.labels = labels;
            chartInstance.data.datasets[0].data = data;
            
            // Update x-axis tick settings based on time range
            if (count > 24) {
                chartInstance.options.scales.x.ticks.maxTicksLimit = 7;
            } else {
                chartInstance.options.scales.x.ticks.maxTicksLimit = 6;
            }
            
            // Update chart
            chartInstance.update();
        }
    }

    function updateChartForCoin(coinName) {
        console.log(`Updating chart for coin: ${coinName}`);
        
        // Extract coin symbol from name
        const coinSymbol = coinName.split('(')[1].replace(')', '');
        
        // Get price range based on coin
        let min, max;
        switch(coinSymbol) {
            case 'BTC':
                min = 38000;
                max = 45000;
                break;
            case 'ETH':
                min = 2000;
                max = 2800;
                break;
            case 'XRP':
                min = 0.4;
                max = 0.6;
                break;
            case 'DOGE':
                min = 0.05;
                max = 0.12;
                break;
            default:
                min = 100;
                max = 1000;
        }
        
        // Get the chart instance
        const chartInstance = Chart.getChart('cryptoChart');
        if (chartInstance) {
            // Update chart title
            chartInstance.data.datasets[0].label = `${coinName} Price (USD)`;
            
            // Generate new data
            const data = generateChartData(24, min, max, Math.random() > 0.3);
            
            // Update chart data
            chartInstance.data.datasets[0].data = data;
            
            // Update y-axis to appropriate scale
            chartInstance.options.scales.y.min = Math.floor(Math.min(...data) * 0.995);
            chartInstance.options.scales.y.max = Math.ceil(Math.max(...data) * 1.005);
            
            // Update tooltip format if necessary
            if (min < 1) {
                chartInstance.options.plugins.tooltip.callbacks.label = function(context) {
                    return `$${context.parsed.y.toFixed(4)}`;
                };
            } else {
                chartInstance.options.plugins.tooltip.callbacks.label = function(context) {
                    return `$${context.parsed.y.toLocaleString()}`;
                };
            }
            
            // Update chart
            chartInstance.update();
            
            // Update balance display
            const lastValue = data[data.length - 1];
            document.querySelector('.balance').textContent = lastValue < 1 
                ? `$${lastValue.toFixed(4)}` 
                : `$${lastValue.toLocaleString()}`;
        }
    }

    // Add window resize handler for responsiveness
    window.addEventListener('resize', function() {
        // Refresh all charts on window resize
        Chart.getChart('cryptoChart')?.resize();
        
        // Get all mini charts and resize them
        document.querySelectorAll('.mini-chart-canvas, .table-chart-canvas').forEach(canvas => {
            const chart = Chart.getChart(canvas);
            if (chart) {
                chart.resize();
            }
        });
    });

    // Add some animations for interactivity
    function addCardPulseEffect() {
        const cards = document.querySelectorAll('.card');
        cards.forEach(card => {
            card.addEventListener('click', function() {
                this.classList.add('pulse');
                setTimeout(() => {
                    this.classList.remove('pulse');
                }, 300);
            });
        });
    }

    // Add dark mode toggle functionality
    function initDarkModeToggle() {
        // This could be implemented if a dark mode toggle button is added to the UI
        console.log('Dark mode is enabled by default');
    }

    // Call additional setup functions
    addCardPulseEffect();
    initDarkModeToggle();
</script>